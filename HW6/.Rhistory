> y=x
> f=outer(x,y,function (x,y)cos(y)/(1+x^2))
y=x
x=seq (1 ,10)
y=x
f=outer(x,y,function (x,y)cos(y)/(1+x^2))
contour (x,y,f)
contour (x,y,f,nlevels =45, add=T)
fa=(f-t(f))/2
contour (x,y,fa,nlevels =15)
> image(x,y,fa)
image(x,y,fa)
persp(x,y,fa)
persp(x,y,fa ,theta =30)
persp(x,y,fa ,theta =30, phi =20)
persp(x,y,fa ,theta =30, phi =70)
persp(x,y,fa ,theta =30, phi =40)
pairs(Auto)
install.packages("ISLR")
library(ISLR)
pairs(Auto)
pairs(∼ mpg + displacement + horsepower + weight +
acceleration , Auto)
plot(horsepower ,mpg)
attach(Auto)
plot(horsepower ,mpg)
identify (horsepower ,mpg ,name)
library(ISLR)
attach(Auto)
identify (horsepower ,mpg ,name)
plot(horsepower ,mpg)
identify (horsepower ,mpg ,name)
install.packages("rattle")
library(rattle)
install.packages(“rattle”, dep=c(“Suggests”))
install.packages("rattle",dependencies = c("Suggests"))
install.packages("RGtk2")
library(rattle)
install.packages("rattle")
install.packages(c("devtools", "RWeka", "spatstat"))
library(rattle)
library(rattle)
rattle()
library(rattle)
rattle()
library(rattle)
rattle()
library(rattle)
rattle()
install.packages("acepack")
install.packages("latticeExtra")
install.packages("htmlTable")
remove.packages(rattle())
remove.packages(rattle())
library("rattle", lib.loc="~/R/win-library/3.3")
remove.packages("rattle", lib="~/R/win-library/3.3")
install.packages("rattle")
library(rattle)
rattle()
install.packages("odfWeave")
library(rattle)
rattle()
library(rattle)
rattle()
install.packages("odfWeave.survey")
install.packages("odfWeave")
library(rattle)
rattle()
install.packages("rattle", repos="http://rattle.togaware.com")
library(rattle)
install.packages(“rattle”, dep=c(“Suggests”))
install.packages("CarioDevice")
install.packages("XML")
install.packages("CarioDevice")
install.packages("rattle",dependencies = c("Suggests"))
library(rattle)
install.packages("RGtk2")
install.packages("rattle", repos="http://rattle.togaware.com")
install.packages("RGtk2")
library(rattle)
library(rattle)
rattle()
install.packages("ggplot2")
install.packages("munsell")
install.packages("acepack")
install.packages("htmlTable")
install.packages("randomForest")
install.packages("caret")
install.packages("Amelia")
library(randomForest)
set.seed(300)
rf <- randomForest(default ~ ., data = credit)
setwd("~/STAT 6620/HW6")
credit=read.csv('credit.csv')
library(randomForest)
set.seed(300)
rf <- randomForest(default ~ ., data = credit)
rf
library(caret)
ctrl <- trainControl(method = "repeatedcv",
number = 10, repeats = 10)
grid_rf <- expand.grid(.mtry = c(2, 4, 8, 16))
set.seed(300)
m_rf <- train(default ~ ., data = credit, method = "rf",
metric = "Kappa", trControl = ctrl,
tuneGrid = grid_rf)
m_rf
grid_c50 <- expand.grid(.model = "tree",
.trials = c(10, 20, 30, 40),
.winnow = "FALSE")
set.seed(300)
m_c50 <- train(default ~ ., data = credit, method = "C5.0",
metric = "Kappa", trControl = ctrl,
tuneGrid = grid_c50)
m_c50
detach("package:caret", unload=TRUE)
install.packages("C50")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
rm(list = ls())
install.packages("ISLR")
install.packages("ISLR")
knitr::opts_chunk$set(echo = TRUE)
library(ISLR)
# The Stock Market Data
names(Smarket)
dim(Smarket)
summary(Smarket)
pairs(Smarket)
cor(Smarket)
